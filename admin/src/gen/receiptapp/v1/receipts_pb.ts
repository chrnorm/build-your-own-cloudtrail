// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file receiptapp/v1/receipts.proto (package receiptapp.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message receiptapp.v1.ListReceiptsRequest
 */
export class ListReceiptsRequest extends Message<ListReceiptsRequest> {
  constructor(data?: PartialMessage<ListReceiptsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receiptapp.v1.ListReceiptsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListReceiptsRequest {
    return new ListReceiptsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListReceiptsRequest {
    return new ListReceiptsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListReceiptsRequest {
    return new ListReceiptsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListReceiptsRequest | PlainMessage<ListReceiptsRequest> | undefined, b: ListReceiptsRequest | PlainMessage<ListReceiptsRequest> | undefined): boolean {
    return proto3.util.equals(ListReceiptsRequest, a, b);
  }
}

/**
 * @generated from message receiptapp.v1.ListReceiptsResponse
 */
export class ListReceiptsResponse extends Message<ListReceiptsResponse> {
  /**
   * @generated from field: repeated receiptapp.v1.Receipt receipts = 1;
   */
  receipts: Receipt[] = [];

  constructor(data?: PartialMessage<ListReceiptsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receiptapp.v1.ListReceiptsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "receipts", kind: "message", T: Receipt, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListReceiptsResponse {
    return new ListReceiptsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListReceiptsResponse {
    return new ListReceiptsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListReceiptsResponse {
    return new ListReceiptsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListReceiptsResponse | PlainMessage<ListReceiptsResponse> | undefined, b: ListReceiptsResponse | PlainMessage<ListReceiptsResponse> | undefined): boolean {
    return proto3.util.equals(ListReceiptsResponse, a, b);
  }
}

/**
 * @generated from message receiptapp.v1.Receipt
 */
export class Receipt extends Message<Receipt> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string merchant_name = 2;
   */
  merchantName = "";

  /**
   * @generated from field: string date = 3;
   */
  date = "";

  /**
   * @generated from field: float total_amount = 4;
   */
  totalAmount = 0;

  constructor(data?: PartialMessage<Receipt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receiptapp.v1.Receipt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "merchant_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "total_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Receipt {
    return new Receipt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Receipt {
    return new Receipt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Receipt {
    return new Receipt().fromJsonString(jsonString, options);
  }

  static equals(a: Receipt | PlainMessage<Receipt> | undefined, b: Receipt | PlainMessage<Receipt> | undefined): boolean {
    return proto3.util.equals(Receipt, a, b);
  }
}

/**
 * @generated from message receiptapp.v1.GetReceiptDownloadURLRequest
 */
export class GetReceiptDownloadURLRequest extends Message<GetReceiptDownloadURLRequest> {
  /**
   * @generated from field: int64 receipt_id = 1;
   */
  receiptId = protoInt64.zero;

  constructor(data?: PartialMessage<GetReceiptDownloadURLRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receiptapp.v1.GetReceiptDownloadURLRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "receipt_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetReceiptDownloadURLRequest {
    return new GetReceiptDownloadURLRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetReceiptDownloadURLRequest {
    return new GetReceiptDownloadURLRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetReceiptDownloadURLRequest {
    return new GetReceiptDownloadURLRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetReceiptDownloadURLRequest | PlainMessage<GetReceiptDownloadURLRequest> | undefined, b: GetReceiptDownloadURLRequest | PlainMessage<GetReceiptDownloadURLRequest> | undefined): boolean {
    return proto3.util.equals(GetReceiptDownloadURLRequest, a, b);
  }
}

/**
 * @generated from message receiptapp.v1.GetReceiptDownloadURLResponse
 */
export class GetReceiptDownloadURLResponse extends Message<GetReceiptDownloadURLResponse> {
  /**
   * @generated from field: string download_url = 1;
   */
  downloadUrl = "";

  constructor(data?: PartialMessage<GetReceiptDownloadURLResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "receiptapp.v1.GetReceiptDownloadURLResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "download_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetReceiptDownloadURLResponse {
    return new GetReceiptDownloadURLResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetReceiptDownloadURLResponse {
    return new GetReceiptDownloadURLResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetReceiptDownloadURLResponse {
    return new GetReceiptDownloadURLResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetReceiptDownloadURLResponse | PlainMessage<GetReceiptDownloadURLResponse> | undefined, b: GetReceiptDownloadURLResponse | PlainMessage<GetReceiptDownloadURLResponse> | undefined): boolean {
    return proto3.util.equals(GetReceiptDownloadURLResponse, a, b);
  }
}

